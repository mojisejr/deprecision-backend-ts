{"id":"helper.js","dependencies":[{"name":"/Users/nonthasak/Desktop/nodejs/nodets/package.json","includedInParent":true,"mtime":1614910914014},{"name":"./pattern-validator","loc":{"line":1,"column":34},"parent":"/Users/nonthasak/Desktop/nodejs/nodets/build/public/js/helper.js","resolved":"/Users/nonthasak/Desktop/nodejs/nodets/build/public/js/pattern-validator.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ok = exports.getLastPathFromUrl = void 0;\n\nvar _patternValidator = require(\"./pattern-validator\");\n\nvar getLastPathFromUrl = function getLastPathFromUrl(url) {\n  if ((0, _patternValidator.isNullOrUndefined)(url)) {\n    return;\n  }\n\n  var splittedUrl = url.split(\"/\");\n  var lastPath = splittedUrl[splittedUrl.length - 1];\n  return lastPath;\n};\n\nexports.getLastPathFromUrl = getLastPathFromUrl;\n\nvar ok = function ok(status) {\n  var okStatus = [200, 201, 204];\n  var isMatched = okStatus.includes(status);\n  console.log(\"is matched\", isMatched);\n  return isMatched;\n};\n\nexports.ok = ok;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"helper.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"helper.js","original":{"line":3,"column":0}},{"name":"getLastPathFromUrl","generated":{"line":10,"column":4},"source":"helper.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":22},"source":"helper.js","original":{"line":3,"column":24}},{"generated":{"line":10,"column":25},"source":"helper.js","original":{"line":3,"column":27}},{"name":"getLastPathFromUrl","generated":{"line":10,"column":34},"source":"helper.js","original":{"line":3,"column":6}},{"generated":{"line":10,"column":52},"source":"helper.js","original":{"line":3,"column":27}},{"name":"url","generated":{"line":10,"column":53},"source":"helper.js","original":{"line":3,"column":28}},{"generated":{"line":10,"column":56},"source":"helper.js","original":{"line":3,"column":27}},{"generated":{"line":10,"column":58},"source":"helper.js","original":{"line":3,"column":36}},{"generated":{"line":11,"column":0},"source":"helper.js","original":{"line":4,"column":2}},{"generated":{"line":11,"column":6},"source":"helper.js","original":{"line":4,"column":6}},{"name":"url","generated":{"line":11,"column":47},"source":"helper.js","original":{"line":4,"column":24}},{"generated":{"line":11,"column":50},"source":"helper.js","original":{"line":4,"column":6}},{"generated":{"line":11,"column":51},"source":"helper.js","original":{"line":4,"column":2}},{"generated":{"line":11,"column":53},"source":"helper.js","original":{"line":4,"column":30}},{"generated":{"line":12,"column":0},"source":"helper.js","original":{"line":5,"column":4}},{"generated":{"line":13,"column":0},"source":"helper.js","original":{"line":6,"column":3}},{"generated":{"line":15,"column":0},"source":"helper.js","original":{"line":7,"column":2}},{"name":"splittedUrl","generated":{"line":15,"column":6},"source":"helper.js","original":{"line":7,"column":8}},{"generated":{"line":15,"column":17},"source":"helper.js","original":{"line":7,"column":19}},{"name":"url","generated":{"line":15,"column":20},"source":"helper.js","original":{"line":7,"column":22}},{"generated":{"line":15,"column":23},"source":"helper.js","original":{"line":7,"column":25}},{"name":"split","generated":{"line":15,"column":24},"source":"helper.js","original":{"line":7,"column":26}},{"generated":{"line":15,"column":29},"source":"helper.js","original":{"line":7,"column":22}},{"generated":{"line":15,"column":30},"source":"helper.js","original":{"line":7,"column":32}},{"generated":{"line":15,"column":33},"source":"helper.js","original":{"line":7,"column":22}},{"generated":{"line":15,"column":34},"source":"helper.js","original":{"line":7,"column":2}},{"generated":{"line":16,"column":0},"source":"helper.js","original":{"line":8,"column":2}},{"name":"lastPath","generated":{"line":16,"column":6},"source":"helper.js","original":{"line":8,"column":8}},{"generated":{"line":16,"column":14},"source":"helper.js","original":{"line":8,"column":16}},{"name":"splittedUrl","generated":{"line":16,"column":17},"source":"helper.js","original":{"line":8,"column":19}},{"generated":{"line":16,"column":28},"source":"helper.js","original":{"line":8,"column":30}},{"name":"splittedUrl","generated":{"line":16,"column":29},"source":"helper.js","original":{"line":8,"column":31}},{"generated":{"line":16,"column":40},"source":"helper.js","original":{"line":8,"column":42}},{"name":"length","generated":{"line":16,"column":41},"source":"helper.js","original":{"line":8,"column":43}},{"generated":{"line":16,"column":47},"source":"helper.js","original":{"line":8,"column":31}},{"generated":{"line":16,"column":50},"source":"helper.js","original":{"line":8,"column":52}},{"generated":{"line":16,"column":51},"source":"helper.js","original":{"line":8,"column":30}},{"generated":{"line":16,"column":52},"source":"helper.js","original":{"line":8,"column":2}},{"generated":{"line":17,"column":0},"source":"helper.js","original":{"line":9,"column":2}},{"name":"lastPath","generated":{"line":17,"column":9},"source":"helper.js","original":{"line":9,"column":9}},{"generated":{"line":17,"column":17},"source":"helper.js","original":{"line":9,"column":2}},{"generated":{"line":18,"column":0},"source":"helper.js","original":{"line":10,"column":1}},{"generated":{"line":18,"column":1},"source":"helper.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":0},"source":"helper.js","original":{"line":12,"column":0}},{"name":"ok","generated":{"line":22,"column":4},"source":"helper.js","original":{"line":12,"column":6}},{"generated":{"line":22,"column":6},"source":"helper.js","original":{"line":12,"column":8}},{"generated":{"line":22,"column":9},"source":"helper.js","original":{"line":12,"column":11}},{"name":"ok","generated":{"line":22,"column":18},"source":"helper.js","original":{"line":12,"column":6}},{"generated":{"line":22,"column":20},"source":"helper.js","original":{"line":12,"column":11}},{"name":"status","generated":{"line":22,"column":21},"source":"helper.js","original":{"line":12,"column":12}},{"generated":{"line":22,"column":27},"source":"helper.js","original":{"line":12,"column":11}},{"generated":{"line":22,"column":29},"source":"helper.js","original":{"line":12,"column":23}},{"generated":{"line":23,"column":0},"source":"helper.js","original":{"line":13,"column":2}},{"name":"okStatus","generated":{"line":23,"column":6},"source":"helper.js","original":{"line":13,"column":8}},{"generated":{"line":23,"column":14},"source":"helper.js","original":{"line":13,"column":16}},{"generated":{"line":23,"column":17},"source":"helper.js","original":{"line":13,"column":19}},{"generated":{"line":23,"column":18},"source":"helper.js","original":{"line":13,"column":20}},{"generated":{"line":23,"column":21},"source":"helper.js","original":{"line":13,"column":19}},{"generated":{"line":23,"column":23},"source":"helper.js","original":{"line":13,"column":25}},{"generated":{"line":23,"column":26},"source":"helper.js","original":{"line":13,"column":19}},{"generated":{"line":23,"column":28},"source":"helper.js","original":{"line":13,"column":30}},{"generated":{"line":23,"column":31},"source":"helper.js","original":{"line":13,"column":19}},{"generated":{"line":23,"column":32},"source":"helper.js","original":{"line":13,"column":2}},{"generated":{"line":24,"column":0},"source":"helper.js","original":{"line":14,"column":2}},{"name":"isMatched","generated":{"line":24,"column":6},"source":"helper.js","original":{"line":14,"column":8}},{"generated":{"line":24,"column":15},"source":"helper.js","original":{"line":14,"column":17}},{"name":"okStatus","generated":{"line":24,"column":18},"source":"helper.js","original":{"line":14,"column":20}},{"generated":{"line":24,"column":26},"source":"helper.js","original":{"line":14,"column":28}},{"name":"includes","generated":{"line":24,"column":27},"source":"helper.js","original":{"line":14,"column":29}},{"generated":{"line":24,"column":35},"source":"helper.js","original":{"line":14,"column":20}},{"name":"status","generated":{"line":24,"column":36},"source":"helper.js","original":{"line":14,"column":38}},{"generated":{"line":24,"column":42},"source":"helper.js","original":{"line":14,"column":20}},{"generated":{"line":24,"column":43},"source":"helper.js","original":{"line":14,"column":2}},{"name":"console","generated":{"line":25,"column":0},"source":"helper.js","original":{"line":15,"column":2}},{"name":"console","generated":{"line":25,"column":2},"source":"helper.js","original":{"line":15,"column":2}},{"generated":{"line":25,"column":9},"source":"helper.js","original":{"line":15,"column":9}},{"name":"log","generated":{"line":25,"column":10},"source":"helper.js","original":{"line":15,"column":10}},{"generated":{"line":25,"column":13},"source":"helper.js","original":{"line":15,"column":2}},{"generated":{"line":25,"column":14},"source":"helper.js","original":{"line":15,"column":14}},{"generated":{"line":25,"column":26},"source":"helper.js","original":{"line":15,"column":2}},{"name":"isMatched","generated":{"line":25,"column":28},"source":"helper.js","original":{"line":15,"column":28}},{"generated":{"line":25,"column":37},"source":"helper.js","original":{"line":15,"column":2}},{"generated":{"line":26,"column":0},"source":"helper.js","original":{"line":16,"column":2}},{"name":"isMatched","generated":{"line":26,"column":9},"source":"helper.js","original":{"line":16,"column":9}},{"generated":{"line":26,"column":18},"source":"helper.js","original":{"line":16,"column":2}},{"generated":{"line":27,"column":0},"source":"helper.js","original":{"line":17,"column":1}},{"generated":{"line":27,"column":1},"source":"helper.js","original":{"line":12,"column":0}}],"sources":{"helper.js":"import { isNullOrUndefined } from \"./pattern-validator\";\n\nconst getLastPathFromUrl = (url) => {\n  if (isNullOrUndefined(url)) {\n    return;\n  }\n  const splittedUrl = url.split(\"/\");\n  const lastPath = splittedUrl[splittedUrl.length - 1];\n  return lastPath;\n};\n\nconst ok = (status) => {\n  const okStatus = [200, 201, 204];\n  const isMatched = okStatus.includes(status);\n  console.log(\"is matched\", isMatched);\n  return isMatched;\n};\n\nexport { getLastPathFromUrl, ok };\n"},"lineCount":null}},"error":null,"hash":"f6b3dece66dd81e6a549bd3e7fa58d76","cacheData":{"env":{}}}